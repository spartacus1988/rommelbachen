

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Sep 25 15:21:10 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    13                           	dabs	1,0x5E,2
    14  0000                     
    15                           ; Version 1.43
    16                           ; Generated 25/07/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F675 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0019                     	;# 
    63  001E                     	;# 
    64  001F                     	;# 
    65  0081                     	;# 
    66  0085                     	;# 
    67  008C                     	;# 
    68  008E                     	;# 
    69  0090                     	;# 
    70  0095                     	;# 
    71  0096                     	;# 
    72  0096                     	;# 
    73  0099                     	;# 
    74  009A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009C                     	;# 
    78  009D                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  0019                     _CMCON	set	25
    82  0005                     _GPIO	set	5
    83  0005                     _GPIObits	set	5
    84  0081                     _OPTION_REG	set	129
    85  0096                     _IOC	set	150
    86  0085                     _TRISIO	set	133
    87                           
    88                           ; #config settings
    89  0000                     
    90                           	psect	cinit
    91  03FD                     start_initialization:	
    92  03FD                     __initialization:	
    93  03FD                     end_of_initialization:	
    94                           ;End of C runtime variable initialization code
    95                           
    96  03FD                     __end_of__initialization:	
    97  03FD  0183               	clrf	3
    98  03FE  29EC               	ljmp	_main	;jump to C main() function
    99                           
   100                           	psect	cstackCOMMON
   101  0000                     __pcstackCOMMON:	
   102  0000                     ??_main:	
   103                           
   104                           	psect	cstackBANK0
   105  0020                     __pcstackBANK0:	
   106                           ; 1 bytes @ 0x0
   107                           
   108  0020                     ?_main:	
   109  0020                     ?___ftpack:	
   110                           ; 1 bytes @ 0x0
   111                           
   112  0020                     ___ftpack@arg:	
   113                           ; 3 bytes @ 0x0
   114                           
   115                           
   116                           ; 3 bytes @ 0x0
   117  0020                     	ds	3
   118  0023                     ___ftpack@exp:	
   119                           
   120                           ; 1 bytes @ 0x3
   121  0023                     	ds	1
   122  0024                     ___ftpack@sign:	
   123                           
   124                           ; 1 bytes @ 0x4
   125  0024                     	ds	1
   126  0025                     ??___ftpack:	
   127                           
   128                           ; 1 bytes @ 0x5
   129  0025                     	ds	3
   130  0028                     ?___lwtoft:	
   131  0028                     ___lwtoft@c:	
   132                           ; 3 bytes @ 0x8
   133                           
   134                           
   135                           ; 2 bytes @ 0x8
   136  0028                     	ds	3
   137  002B                     ??___lwtoft:	
   138                           
   139                           ; 1 bytes @ 0xB
   140  002B                     	ds	1
   141  002C                     ?___ftmul:	
   142  002C                     ___ftmul@f1:	
   143                           ; 3 bytes @ 0xC
   144                           
   145                           
   146                           ; 3 bytes @ 0xC
   147  002C                     	ds	3
   148  002F                     ___ftmul@f2:	
   149                           
   150                           ; 3 bytes @ 0xF
   151  002F                     	ds	3
   152  0032                     ??___ftmul:	
   153                           
   154                           ; 1 bytes @ 0x12
   155  0032                     	ds	4
   156  0036                     ___ftmul@exp:	
   157                           
   158                           ; 1 bytes @ 0x16
   159  0036                     	ds	1
   160  0037                     ___ftmul@f3_as_product:	
   161                           
   162                           ; 3 bytes @ 0x17
   163  0037                     	ds	3
   164  003A                     ___ftmul@cntr:	
   165                           
   166                           ; 1 bytes @ 0x1A
   167  003A                     	ds	1
   168  003B                     ___ftmul@sign:	
   169                           
   170                           ; 1 bytes @ 0x1B
   171  003B                     	ds	1
   172  003C                     ?___fttol:	
   173  003C                     ___fttol@f1:	
   174                           ; 4 bytes @ 0x1C
   175                           
   176                           
   177                           ; 3 bytes @ 0x1C
   178  003C                     	ds	4
   179  0040                     ??___fttol:	
   180                           
   181                           ; 1 bytes @ 0x20
   182  0040                     	ds	4
   183  0044                     ___fttol@sign1:	
   184                           
   185                           ; 1 bytes @ 0x24
   186  0044                     	ds	1
   187  0045                     ___fttol@lval:	
   188                           
   189                           ; 4 bytes @ 0x25
   190  0045                     	ds	4
   191  0049                     ___fttol@exp1:	
   192                           
   193                           ; 1 bytes @ 0x29
   194  0049                     	ds	1
   195  004A                     ?_SetPwmValue:	
   196  004A                     SetPwmValue@pwm:	
   197                           ; 1 bytes @ 0x2A
   198                           
   199                           
   200                           ; 2 bytes @ 0x2A
   201  004A                     	ds	2
   202  004C                     ??_SetPwmValue:	
   203                           
   204                           ; 1 bytes @ 0x2C
   205  004C                     	ds	4
   206  0050                     main@pwm:	
   207                           
   208                           ; 2 bytes @ 0x30
   209  0050                     	ds	2
   210                           
   211                           	psect	maintext
   212  01EC                     __pmaintext:	
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 28 in file "main.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;  pwm             2   48[BANK0 ] unsigned int 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, pclath, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0
   232 ;;      Params:         0       0
   233 ;;      Locals:         0       2
   234 ;;      Temps:          0       0
   235 ;;      Totals:         0       2
   236 ;;Total ram usage:        2 bytes
   237 ;; Hardware stack levels required when called:    3
   238 ;; This function calls:
   239 ;;		_SetPwmValue
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           
   246                           ;psect for function _main
   247  01EC                     _main:	
   248                           
   249                           ;main.c: 31: GPIO = 0x00;
   250                           
   251                           ;incstack = 0
   252                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   253  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   254  01ED  0185               	clrf	5	;volatile
   255                           
   256                           ;main.c: 32: TRISIO = 0x1F;
   257  01EE  301F               	movlw	31
   258  01EF  1683               	bsf	3,5	;RP0=1, select bank1
   259  01F0  0085               	movwf	5	;volatile
   260                           
   261                           ;main.c: 33: CMCON = 0x07;
   262  01F1  3007               	movlw	7
   263  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   264  01F3  0099               	movwf	25	;volatile
   265                           
   266                           ;main.c: 34: IOC = 0x00;
   267  01F4  1683               	bsf	3,5	;RP0=1, select bank1
   268  01F5  0196               	clrf	22	;volatile
   269                           
   270                           ;main.c: 35: OPTION_REG = 0x80;
   271  01F6  3080               	movlw	128
   272  01F7  0081               	movwf	1	;volatile
   273                           
   274                           ;main.c: 38: unsigned int pwm =0;
   275  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   276  01F9  01D0               	clrf	main@pwm
   277  01FA  01D1               	clrf	main@pwm+1
   278  01FB                     l779:	
   279                           ;main.c: 40: while(1)
   280                           
   281                           
   282                           ;main.c: 41: {
   283                           ;main.c: 51: SetPwmValue(500);
   284  01FB  30F4               	movlw	244
   285  01FC  1283               	bcf	3,5	;RP0=0, select bank0
   286  01FD  00CA               	movwf	SetPwmValue@pwm
   287  01FE  3001               	movlw	1
   288  01FF  00CB               	movwf	SetPwmValue@pwm+1
   289  0200  2202               	fcall	_SetPwmValue
   290  0201  29FB               	goto	l779
   291  0202                     __end_of_main:	
   292                           
   293                           	psect	text1
   294  0202                     __ptext1:	
   295 ;; *************** function _SetPwmValue *****************
   296 ;; Defined at:
   297 ;;		line 18 in file "main.c"
   298 ;; Parameters:    Size  Location     Type
   299 ;;  pwm             2   42[BANK0 ] unsigned int 
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, pclath, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMMON   BANK0
   311 ;;      Params:         0       2
   312 ;;      Locals:         0       0
   313 ;;      Temps:          0       4
   314 ;;      Totals:         0       6
   315 ;;Total ram usage:        6 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    2
   318 ;; This function calls:
   319 ;;		___ftmul
   320 ;;		___fttol
   321 ;;		___lwtoft
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           
   328                           ;psect for function _SetPwmValue
   329  0202                     _SetPwmValue:	
   330                           
   331                           ;main.c: 20: GPIObits.GP5 = 1;
   332                           
   333                           ;incstack = 0
   334                           ; Regs used in _SetPwmValue: [wreg+status,2+status,0+pclath+cstack]
   335  0202  1283               	bcf	3,5	;RP0=0, select bank0
   336  0203  1685               	bsf	5,5	;volatile
   337                           
   338                           ;main.c: 21: _delay((unsigned long)((pwm)*(4000000/4000.0)));
   339  0204  084B               	movf	SetPwmValue@pwm+1,w
   340  0205  00A9               	movwf	___lwtoft@c+1
   341  0206  084A               	movf	SetPwmValue@pwm,w
   342  0207  00A8               	movwf	___lwtoft@c
   343  0208  21D8               	fcall	___lwtoft
   344  0209  1283               	bcf	3,5	;RP0=0, select bank0
   345  020A  0828               	movf	?___lwtoft,w
   346  020B  00AF               	movwf	___ftmul@f2
   347  020C  0829               	movf	?___lwtoft+1,w
   348  020D  00B0               	movwf	___ftmul@f2+1
   349  020E  082A               	movf	?___lwtoft+2,w
   350  020F  00B1               	movwf	___ftmul@f2+2
   351  0210  3000               	movlw	0
   352  0211  00AC               	movwf	___ftmul@f1
   353  0212  307A               	movlw	122
   354  0213  00AD               	movwf	___ftmul@f1+1
   355  0214  3044               	movlw	68
   356  0215  00AE               	movwf	___ftmul@f1+2
   357  0216  232E               	fcall	___ftmul
   358  0217  1283               	bcf	3,5	;RP0=0, select bank0
   359  0218  082C               	movf	?___ftmul,w
   360  0219  00BC               	movwf	___fttol@f1
   361  021A  082D               	movf	?___ftmul+1,w
   362  021B  00BD               	movwf	___fttol@f1+1
   363  021C  082E               	movf	?___ftmul+2,w
   364  021D  00BE               	movwf	___fttol@f1+2
   365  021E  22A1               	fcall	___fttol
   366  021F  1283               	bcf	3,5	;RP0=0, select bank0
   367  0220  083C               	movf	?___fttol,w
   368  0221  00CC               	movwf	??_SetPwmValue
   369  0222  083D               	movf	?___fttol+1,w
   370  0223  00CD               	movwf	??_SetPwmValue+1
   371  0224  083E               	movf	?___fttol+2,w
   372  0225  00CE               	movwf	??_SetPwmValue+2
   373  0226  083F               	movf	?___fttol+3,w
   374  0227  00CF               	movwf	??_SetPwmValue+3
   375                           
   376                           ;main.c: 23: GPIObits.GP5 = 0;
   377  0228  1283               	bcf	3,5	;RP0=0, select bank0
   378  0229  1285               	bcf	5,5	;volatile
   379                           
   380                           ;main.c: 24: _delay((unsigned long)((10)*(4000000/4000.0)));
   381  022A  300D               	movlw	13
   382  022B  00CD               	movwf	??_SetPwmValue+1
   383  022C  30FB               	movlw	251
   384  022D  00CC               	movwf	??_SetPwmValue
   385  022E                     u737:	
   386  022E  0BCC               	decfsz	??_SetPwmValue,f
   387  022F  2A2E               	goto	u737
   388  0230  0BCD               	decfsz	??_SetPwmValue+1,f
   389  0231  2A2E               	goto	u737
   390  0232  2A33               	nop2
   391  0233  0008               	return
   392  0234                     __end_of_SetPwmValue:	
   393                           
   394                           	psect	text2
   395  01D8                     __ptext2:	
   396 ;; *************** function ___lwtoft *****************
   397 ;; Defined at:
   398 ;;		line 28 in file "/opt/microchip/xc8/v1.43/sources/common/lwtoft.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;  c               2    8[BANK0 ] unsigned int 
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  3    8[BANK0 ] float 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0
   412 ;;      Params:         0       3
   413 ;;      Locals:         0       0
   414 ;;      Temps:          0       1
   415 ;;      Totals:         0       4
   416 ;;Total ram usage:        4 bytes
   417 ;; Hardware stack levels used:    1
   418 ;; Hardware stack levels required when called:    1
   419 ;; This function calls:
   420 ;;		___ftpack
   421 ;; This function is called by:
   422 ;;		_SetPwmValue
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function ___lwtoft
   428  01D8                     ___lwtoft:	
   429                           
   430                           ;incstack = 0
   431                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   432  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   433  01D9  0828               	movf	___lwtoft@c,w
   434  01DA  00A0               	movwf	___ftpack@arg
   435  01DB  0829               	movf	___lwtoft@c+1,w
   436  01DC  00A1               	movwf	___ftpack@arg+1
   437  01DD  01A2               	clrf	___ftpack@arg+2
   438  01DE  308E               	movlw	142
   439  01DF  00AB               	movwf	??___lwtoft
   440  01E0  082B               	movf	??___lwtoft,w
   441  01E1  00A3               	movwf	___ftpack@exp
   442  01E2  01A4               	clrf	___ftpack@sign
   443  01E3  2234               	fcall	___ftpack
   444  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   445  01E5  0820               	movf	?___ftpack,w
   446  01E6  00A8               	movwf	?___lwtoft
   447  01E7  0821               	movf	?___ftpack+1,w
   448  01E8  00A9               	movwf	?___lwtoft+1
   449  01E9  0822               	movf	?___ftpack+2,w
   450  01EA  00AA               	movwf	?___lwtoft+2
   451  01EB  0008               	return
   452  01EC                     __end_of___lwtoft:	
   453                           
   454                           	psect	text3
   455  02A1                     __ptext3:	
   456 ;; *************** function ___fttol *****************
   457 ;; Defined at:
   458 ;;		line 44 in file "/opt/microchip/xc8/v1.43/sources/common/fttol.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;  f1              3   28[BANK0 ] float 
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  lval            4   37[BANK0 ] unsigned long 
   463 ;;  exp1            1   41[BANK0 ] unsigned char 
   464 ;;  sign1           1   36[BANK0 ] unsigned char 
   465 ;; Return value:  Size  Location     Type
   466 ;;                  4   28[BANK0 ] long 
   467 ;; Registers used:
   468 ;;		wreg, status,2, status,0
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMMON   BANK0
   474 ;;      Params:         0       4
   475 ;;      Locals:         0       6
   476 ;;      Temps:          0       4
   477 ;;      Totals:         0      14
   478 ;;Total ram usage:       14 bytes
   479 ;; Hardware stack levels used:    1
   480 ;; This function calls:
   481 ;;		Nothing
   482 ;; This function is called by:
   483 ;;		_SetPwmValue
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           
   488                           ;psect for function ___fttol
   489  02A1                     ___fttol:	
   490                           
   491                           ;incstack = 0
   492                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   493  02A1  1283               	bcf	3,5	;RP0=0, select bank0
   494  02A2  083C               	movf	___fttol@f1,w
   495  02A3  00C0               	movwf	??___fttol
   496  02A4  083D               	movf	___fttol@f1+1,w
   497  02A5  00C1               	movwf	??___fttol+1
   498  02A6  083E               	movf	___fttol@f1+2,w
   499  02A7  00C2               	movwf	??___fttol+2
   500  02A8  1003               	clrc
   501  02A9  0D41               	rlf	??___fttol+1,w
   502  02AA  0D42               	rlf	??___fttol+2,w
   503  02AB  00C3               	movwf	??___fttol+3
   504  02AC  0843               	movf	??___fttol+3,w
   505  02AD  00C9               	movwf	___fttol@exp1
   506  02AE  0849               	movf	___fttol@exp1,w
   507  02AF  1D03               	btfss	3,2
   508  02B0  2ABA               	goto	l721
   509  02B1  3000               	movlw	0
   510  02B2  00BF               	movwf	?___fttol+3
   511  02B3  3000               	movlw	0
   512  02B4  00BE               	movwf	?___fttol+2
   513  02B5  3000               	movlw	0
   514  02B6  00BD               	movwf	?___fttol+1
   515  02B7  3000               	movlw	0
   516  02B8  00BC               	movwf	?___fttol
   517  02B9  0008               	return
   518  02BA                     l721:	
   519  02BA  083C               	movf	___fttol@f1,w
   520  02BB  00C0               	movwf	??___fttol
   521  02BC  083D               	movf	___fttol@f1+1,w
   522  02BD  00C1               	movwf	??___fttol+1
   523  02BE  083E               	movf	___fttol@f1+2,w
   524  02BF  00C2               	movwf	??___fttol+2
   525  02C0  3017               	movlw	23
   526  02C1                     u645:	
   527  02C1  1003               	clrc
   528  02C2  0CC2               	rrf	??___fttol+2,f
   529  02C3  0CC1               	rrf	??___fttol+1,f
   530  02C4  0CC0               	rrf	??___fttol,f
   531  02C5  3EFF               	addlw	-1
   532  02C6  1D03               	skipz
   533  02C7  2AC1               	goto	u645
   534  02C8  0840               	movf	??___fttol,w
   535  02C9  00C3               	movwf	??___fttol+3
   536  02CA  0843               	movf	??___fttol+3,w
   537  02CB  00C4               	movwf	___fttol@sign1
   538  02CC  17BD               	bsf	___fttol@f1+1,7
   539  02CD  30FF               	movlw	255
   540  02CE  05BC               	andwf	___fttol@f1,f
   541  02CF  30FF               	movlw	255
   542  02D0  05BD               	andwf	___fttol@f1+1,f
   543  02D1  3000               	movlw	0
   544  02D2  05BE               	andwf	___fttol@f1+2,f
   545  02D3  083C               	movf	___fttol@f1,w
   546  02D4  00C5               	movwf	___fttol@lval
   547  02D5  083D               	movf	___fttol@f1+1,w
   548  02D6  00C6               	movwf	___fttol@lval+1
   549  02D7  083E               	movf	___fttol@f1+2,w
   550  02D8  00C7               	movwf	___fttol@lval+2
   551  02D9  01C8               	clrf	___fttol@lval+3
   552  02DA  308E               	movlw	142
   553  02DB  02C9               	subwf	___fttol@exp1,f
   554  02DC  1FC9               	btfss	___fttol@exp1,7
   555  02DD  2AFC               	goto	l741
   556  02DE  0849               	movf	___fttol@exp1,w
   557  02DF  3A80               	xorlw	128
   558  02E0  3E8F               	addlw	143
   559  02E1  1803               	skipnc
   560  02E2  2AEC               	goto	l739
   561  02E3  3000               	movlw	0
   562  02E4  00BF               	movwf	?___fttol+3
   563  02E5  3000               	movlw	0
   564  02E6  00BE               	movwf	?___fttol+2
   565  02E7  3000               	movlw	0
   566  02E8  00BD               	movwf	?___fttol+1
   567  02E9  3000               	movlw	0
   568  02EA  00BC               	movwf	?___fttol
   569  02EB  0008               	return
   570  02EC                     l739:	
   571  02EC  3001               	movlw	1
   572  02ED                     u675:	
   573  02ED  1003               	clrc
   574  02EE  0CC8               	rrf	___fttol@lval+3,f
   575  02EF  0CC7               	rrf	___fttol@lval+2,f
   576  02F0  0CC6               	rrf	___fttol@lval+1,f
   577  02F1  0CC5               	rrf	___fttol@lval,f
   578  02F2  3EFF               	addlw	-1
   579  02F3  1D03               	skipz
   580  02F4  2AED               	goto	u675
   581  02F5  3001               	movlw	1
   582  02F6  00C0               	movwf	??___fttol
   583  02F7  0840               	movf	??___fttol,w
   584  02F8  07C9               	addwf	___fttol@exp1,f
   585  02F9  1903               	btfsc	3,2
   586  02FA  2B17               	goto	l749
   587  02FB  2AEC               	goto	l739
   588  02FC                     l741:	
   589  02FC  3018               	movlw	24
   590  02FD  0249               	subwf	___fttol@exp1,w
   591  02FE  1C03               	skipc
   592  02FF  2B14               	goto	l361
   593  0300  3000               	movlw	0
   594  0301  00BF               	movwf	?___fttol+3
   595  0302  3000               	movlw	0
   596  0303  00BE               	movwf	?___fttol+2
   597  0304  3000               	movlw	0
   598  0305  00BD               	movwf	?___fttol+1
   599  0306  3000               	movlw	0
   600  0307  00BC               	movwf	?___fttol
   601  0308  0008               	return
   602  0309                     l747:	
   603  0309  3001               	movlw	1
   604  030A  00C0               	movwf	??___fttol
   605  030B                     u705:	
   606  030B  1003               	clrc
   607  030C  0DC5               	rlf	___fttol@lval,f
   608  030D  0DC6               	rlf	___fttol@lval+1,f
   609  030E  0DC7               	rlf	___fttol@lval+2,f
   610  030F  0DC8               	rlf	___fttol@lval+3,f
   611  0310  0BC0               	decfsz	??___fttol,f
   612  0311  2B0B               	goto	u705
   613  0312  3001               	movlw	1
   614  0313  02C9               	subwf	___fttol@exp1,f
   615  0314                     l361:	
   616  0314  0849               	movf	___fttol@exp1,w
   617  0315  1D03               	btfss	3,2
   618  0316  2B09               	goto	l747
   619  0317                     l749:	
   620  0317  0844               	movf	___fttol@sign1,w
   621  0318  1903               	btfsc	3,2
   622  0319  2B25               	goto	l753
   623  031A  09C5               	comf	___fttol@lval,f
   624  031B  09C6               	comf	___fttol@lval+1,f
   625  031C  09C7               	comf	___fttol@lval+2,f
   626  031D  09C8               	comf	___fttol@lval+3,f
   627  031E  0AC5               	incf	___fttol@lval,f
   628  031F  1903               	skipnz
   629  0320  0AC6               	incf	___fttol@lval+1,f
   630  0321  1903               	skipnz
   631  0322  0AC7               	incf	___fttol@lval+2,f
   632  0323  1903               	skipnz
   633  0324  0AC8               	incf	___fttol@lval+3,f
   634  0325                     l753:	
   635  0325  0848               	movf	___fttol@lval+3,w
   636  0326  00BF               	movwf	?___fttol+3
   637  0327  0847               	movf	___fttol@lval+2,w
   638  0328  00BE               	movwf	?___fttol+2
   639  0329  0846               	movf	___fttol@lval+1,w
   640  032A  00BD               	movwf	?___fttol+1
   641  032B  0845               	movf	___fttol@lval,w
   642  032C  00BC               	movwf	?___fttol
   643  032D  0008               	return
   644  032E                     __end_of___fttol:	
   645                           
   646                           	psect	text4
   647  032E                     __ptext4:	
   648 ;; *************** function ___ftmul *****************
   649 ;; Defined at:
   650 ;;		line 62 in file "/opt/microchip/xc8/v1.43/sources/common/ftmul.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  f1              3   12[BANK0 ] float 
   653 ;;  f2              3   15[BANK0 ] float 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
   656 ;;  sign            1   27[BANK0 ] unsigned char 
   657 ;;  cntr            1   26[BANK0 ] unsigned char 
   658 ;;  exp             1   22[BANK0 ] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  3   12[BANK0 ] float 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0
   668 ;;      Params:         0       6
   669 ;;      Locals:         0       6
   670 ;;      Temps:          0       4
   671 ;;      Totals:         0      16
   672 ;;Total ram usage:       16 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    1
   675 ;; This function calls:
   676 ;;		___ftpack
   677 ;; This function is called by:
   678 ;;		_SetPwmValue
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function ___ftmul
   684  032E                     ___ftmul:	
   685                           
   686                           ;incstack = 0
   687                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
   688  032E  1283               	bcf	3,5	;RP0=0, select bank0
   689  032F  082C               	movf	___ftmul@f1,w
   690  0330  00B2               	movwf	??___ftmul
   691  0331  082D               	movf	___ftmul@f1+1,w
   692  0332  00B3               	movwf	??___ftmul+1
   693  0333  082E               	movf	___ftmul@f1+2,w
   694  0334  00B4               	movwf	??___ftmul+2
   695  0335  1003               	clrc
   696  0336  0D33               	rlf	??___ftmul+1,w
   697  0337  0D34               	rlf	??___ftmul+2,w
   698  0338  00B5               	movwf	??___ftmul+3
   699  0339  0835               	movf	??___ftmul+3,w
   700  033A  00B6               	movwf	___ftmul@exp
   701  033B  0836               	movf	___ftmul@exp,w
   702  033C  1D03               	btfss	3,2
   703  033D  2B45               	goto	l671
   704  033E  3000               	movlw	0
   705  033F  00AC               	movwf	?___ftmul
   706  0340  3000               	movlw	0
   707  0341  00AD               	movwf	?___ftmul+1
   708  0342  3000               	movlw	0
   709  0343  00AE               	movwf	?___ftmul+2
   710  0344  0008               	return
   711  0345                     l671:	
   712  0345  082F               	movf	___ftmul@f2,w
   713  0346  00B2               	movwf	??___ftmul
   714  0347  0830               	movf	___ftmul@f2+1,w
   715  0348  00B3               	movwf	??___ftmul+1
   716  0349  0831               	movf	___ftmul@f2+2,w
   717  034A  00B4               	movwf	??___ftmul+2
   718  034B  1003               	clrc
   719  034C  0D33               	rlf	??___ftmul+1,w
   720  034D  0D34               	rlf	??___ftmul+2,w
   721  034E  00B5               	movwf	??___ftmul+3
   722  034F  0835               	movf	??___ftmul+3,w
   723  0350  00BB               	movwf	___ftmul@sign
   724  0351  083B               	movf	___ftmul@sign,w
   725  0352  1D03               	btfss	3,2
   726  0353  2B5B               	goto	l677
   727  0354  3000               	movlw	0
   728  0355  00AC               	movwf	?___ftmul
   729  0356  3000               	movlw	0
   730  0357  00AD               	movwf	?___ftmul+1
   731  0358  3000               	movlw	0
   732  0359  00AE               	movwf	?___ftmul+2
   733  035A  0008               	return
   734  035B                     l677:	
   735  035B  083B               	movf	___ftmul@sign,w
   736  035C  3E7B               	addlw	123
   737  035D  00B2               	movwf	??___ftmul
   738  035E  0832               	movf	??___ftmul,w
   739  035F  07B6               	addwf	___ftmul@exp,f
   740  0360  082C               	movf	___ftmul@f1,w
   741  0361  00B2               	movwf	??___ftmul
   742  0362  082D               	movf	___ftmul@f1+1,w
   743  0363  00B3               	movwf	??___ftmul+1
   744  0364  082E               	movf	___ftmul@f1+2,w
   745  0365  00B4               	movwf	??___ftmul+2
   746  0366  3010               	movlw	16
   747  0367                     u515:	
   748  0367  1003               	clrc
   749  0368  0CB4               	rrf	??___ftmul+2,f
   750  0369  0CB3               	rrf	??___ftmul+1,f
   751  036A  0CB2               	rrf	??___ftmul,f
   752  036B  3EFF               	addlw	-1
   753  036C  1D03               	skipz
   754  036D  2B67               	goto	u515
   755  036E  0832               	movf	??___ftmul,w
   756  036F  00B5               	movwf	??___ftmul+3
   757  0370  0835               	movf	??___ftmul+3,w
   758  0371  00BB               	movwf	___ftmul@sign
   759  0372  082F               	movf	___ftmul@f2,w
   760  0373  00B2               	movwf	??___ftmul
   761  0374  0830               	movf	___ftmul@f2+1,w
   762  0375  00B3               	movwf	??___ftmul+1
   763  0376  0831               	movf	___ftmul@f2+2,w
   764  0377  00B4               	movwf	??___ftmul+2
   765  0378  3010               	movlw	16
   766  0379                     u525:	
   767  0379  1003               	clrc
   768  037A  0CB4               	rrf	??___ftmul+2,f
   769  037B  0CB3               	rrf	??___ftmul+1,f
   770  037C  0CB2               	rrf	??___ftmul,f
   771  037D  3EFF               	addlw	-1
   772  037E  1D03               	skipz
   773  037F  2B79               	goto	u525
   774  0380  0832               	movf	??___ftmul,w
   775  0381  00B5               	movwf	??___ftmul+3
   776  0382  0835               	movf	??___ftmul+3,w
   777  0383  06BB               	xorwf	___ftmul@sign,f
   778  0384  3080               	movlw	128
   779  0385  00B2               	movwf	??___ftmul
   780  0386  0832               	movf	??___ftmul,w
   781  0387  05BB               	andwf	___ftmul@sign,f
   782  0388  17AD               	bsf	___ftmul@f1+1,7
   783  0389  17B0               	bsf	___ftmul@f2+1,7
   784  038A  30FF               	movlw	255
   785  038B  05AF               	andwf	___ftmul@f2,f
   786  038C  30FF               	movlw	255
   787  038D  05B0               	andwf	___ftmul@f2+1,f
   788  038E  3000               	movlw	0
   789  038F  05B1               	andwf	___ftmul@f2+2,f
   790  0390  3000               	movlw	0
   791  0391  00B7               	movwf	___ftmul@f3_as_product
   792  0392  3000               	movlw	0
   793  0393  00B8               	movwf	___ftmul@f3_as_product+1
   794  0394  3000               	movlw	0
   795  0395  00B9               	movwf	___ftmul@f3_as_product+2
   796  0396  3007               	movlw	7
   797  0397  00B2               	movwf	??___ftmul
   798  0398  0832               	movf	??___ftmul,w
   799  0399  00BA               	movwf	___ftmul@cntr
   800  039A                     l689:	
   801  039A  1C2C               	btfss	___ftmul@f1,0
   802  039B  2BAA               	goto	l693
   803  039C  082F               	movf	___ftmul@f2,w
   804  039D  07B7               	addwf	___ftmul@f3_as_product,f
   805  039E  0830               	movf	___ftmul@f2+1,w
   806  039F  1103               	clrz
   807  03A0  1803               	skipnc
   808  03A1  0A30               	incf	___ftmul@f2+1,w
   809  03A2  1D03               	btfss	3,2
   810  03A3  07B8               	addwf	___ftmul@f3_as_product+1,f
   811  03A4  0831               	movf	___ftmul@f2+2,w
   812  03A5  1103               	clrz
   813  03A6  1803               	skipnc
   814  03A7  0A31               	incf	___ftmul@f2+2,w
   815  03A8  1D03               	btfss	3,2
   816  03A9  07B9               	addwf	___ftmul@f3_as_product+2,f
   817  03AA                     l693:	
   818  03AA  3001               	movlw	1
   819  03AB                     u555:	
   820  03AB  1003               	clrc
   821  03AC  0CAE               	rrf	___ftmul@f1+2,f
   822  03AD  0CAD               	rrf	___ftmul@f1+1,f
   823  03AE  0CAC               	rrf	___ftmul@f1,f
   824  03AF  3EFF               	addlw	-1
   825  03B0  1D03               	skipz
   826  03B1  2BAB               	goto	u555
   827  03B2  3001               	movlw	1
   828  03B3                     u565:	
   829  03B3  1003               	clrc
   830  03B4  0DAF               	rlf	___ftmul@f2,f
   831  03B5  0DB0               	rlf	___ftmul@f2+1,f
   832  03B6  0DB1               	rlf	___ftmul@f2+2,f
   833  03B7  3EFF               	addlw	-1
   834  03B8  1D03               	skipz
   835  03B9  2BB3               	goto	u565
   836  03BA  3001               	movlw	1
   837  03BB  02BA               	subwf	___ftmul@cntr,f
   838  03BC  1D03               	btfss	3,2
   839  03BD  2B9A               	goto	l689
   840  03BE  3009               	movlw	9
   841  03BF  00B2               	movwf	??___ftmul
   842  03C0  0832               	movf	??___ftmul,w
   843  03C1  00BA               	movwf	___ftmul@cntr
   844  03C2                     l701:	
   845  03C2  1C2C               	btfss	___ftmul@f1,0
   846  03C3  2BD2               	goto	l705
   847  03C4  082F               	movf	___ftmul@f2,w
   848  03C5  07B7               	addwf	___ftmul@f3_as_product,f
   849  03C6  0830               	movf	___ftmul@f2+1,w
   850  03C7  1103               	clrz
   851  03C8  1803               	skipnc
   852  03C9  0A30               	incf	___ftmul@f2+1,w
   853  03CA  1D03               	btfss	3,2
   854  03CB  07B8               	addwf	___ftmul@f3_as_product+1,f
   855  03CC  0831               	movf	___ftmul@f2+2,w
   856  03CD  1103               	clrz
   857  03CE  1803               	skipnc
   858  03CF  0A31               	incf	___ftmul@f2+2,w
   859  03D0  1D03               	btfss	3,2
   860  03D1  07B9               	addwf	___ftmul@f3_as_product+2,f
   861  03D2                     l705:	
   862  03D2  3001               	movlw	1
   863  03D3                     u605:	
   864  03D3  1003               	clrc
   865  03D4  0CAE               	rrf	___ftmul@f1+2,f
   866  03D5  0CAD               	rrf	___ftmul@f1+1,f
   867  03D6  0CAC               	rrf	___ftmul@f1,f
   868  03D7  3EFF               	addlw	-1
   869  03D8  1D03               	skipz
   870  03D9  2BD3               	goto	u605
   871  03DA  3001               	movlw	1
   872  03DB                     u615:	
   873  03DB  1003               	clrc
   874  03DC  0CB9               	rrf	___ftmul@f3_as_product+2,f
   875  03DD  0CB8               	rrf	___ftmul@f3_as_product+1,f
   876  03DE  0CB7               	rrf	___ftmul@f3_as_product,f
   877  03DF  3EFF               	addlw	-1
   878  03E0  1D03               	skipz
   879  03E1  2BDB               	goto	u615
   880  03E2  3001               	movlw	1
   881  03E3  02BA               	subwf	___ftmul@cntr,f
   882  03E4  1D03               	btfss	3,2
   883  03E5  2BC2               	goto	l701
   884  03E6  0837               	movf	___ftmul@f3_as_product,w
   885  03E7  00A0               	movwf	___ftpack@arg
   886  03E8  0838               	movf	___ftmul@f3_as_product+1,w
   887  03E9  00A1               	movwf	___ftpack@arg+1
   888  03EA  0839               	movf	___ftmul@f3_as_product+2,w
   889  03EB  00A2               	movwf	___ftpack@arg+2
   890  03EC  0836               	movf	___ftmul@exp,w
   891  03ED  00B2               	movwf	??___ftmul
   892  03EE  0832               	movf	??___ftmul,w
   893  03EF  00A3               	movwf	___ftpack@exp
   894  03F0  083B               	movf	___ftmul@sign,w
   895  03F1  00B3               	movwf	??___ftmul+1
   896  03F2  0833               	movf	??___ftmul+1,w
   897  03F3  00A4               	movwf	___ftpack@sign
   898  03F4  2234               	fcall	___ftpack
   899  03F5  1283               	bcf	3,5	;RP0=0, select bank0
   900  03F6  0820               	movf	?___ftpack,w
   901  03F7  00AC               	movwf	?___ftmul
   902  03F8  0821               	movf	?___ftpack+1,w
   903  03F9  00AD               	movwf	?___ftmul+1
   904  03FA  0822               	movf	?___ftpack+2,w
   905  03FB  00AE               	movwf	?___ftmul+2
   906  03FC  0008               	return
   907  03FD                     __end_of___ftmul:	
   908                           
   909                           	psect	text5
   910  0234                     __ptext5:	
   911 ;; *************** function ___ftpack *****************
   912 ;; Defined at:
   913 ;;		line 62 in file "/opt/microchip/xc8/v1.43/sources/common/float.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  arg             3    0[BANK0 ] unsigned um
   916 ;;  exp             1    3[BANK0 ] unsigned char 
   917 ;;  sign            1    4[BANK0 ] unsigned char 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;		None
   920 ;; Return value:  Size  Location     Type
   921 ;;                  3    0[BANK0 ] float 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMMON   BANK0
   929 ;;      Params:         0       5
   930 ;;      Locals:         0       0
   931 ;;      Temps:          0       3
   932 ;;      Totals:         0       8
   933 ;;Total ram usage:        8 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		___ftmul
   939 ;;		___lwtoft
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function ___ftpack
   945  0234                     ___ftpack:	
   946                           
   947                           ;incstack = 0
   948                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
   949  0234  1283               	bcf	3,5	;RP0=0, select bank0
   950  0235  0823               	movf	___ftpack@exp,w
   951  0236  1903               	btfsc	3,2
   952  0237  2A3D               	goto	l637
   953  0238  0822               	movf	___ftpack@arg+2,w
   954  0239  0421               	iorwf	___ftpack@arg+1,w
   955  023A  0420               	iorwf	___ftpack@arg,w
   956  023B  1D03               	skipz
   957  023C  2A50               	goto	l643
   958  023D                     l637:	
   959  023D  3000               	movlw	0
   960  023E  00A0               	movwf	?___ftpack
   961  023F  3000               	movlw	0
   962  0240  00A1               	movwf	?___ftpack+1
   963  0241  3000               	movlw	0
   964  0242  00A2               	movwf	?___ftpack+2
   965  0243  0008               	return
   966  0244                     l641:	
   967  0244  3001               	movlw	1
   968  0245  00A5               	movwf	??___ftpack
   969  0246  0825               	movf	??___ftpack,w
   970  0247  07A3               	addwf	___ftpack@exp,f
   971  0248  3001               	movlw	1
   972  0249                     u395:	
   973  0249  1003               	clrc
   974  024A  0CA2               	rrf	___ftpack@arg+2,f
   975  024B  0CA1               	rrf	___ftpack@arg+1,f
   976  024C  0CA0               	rrf	___ftpack@arg,f
   977  024D  3EFF               	addlw	-1
   978  024E  1D03               	skipz
   979  024F  2A49               	goto	u395
   980  0250                     l643:	
   981  0250  30FE               	movlw	254
   982  0251  0522               	andwf	___ftpack@arg+2,w
   983  0252  1903               	btfsc	3,2
   984  0253  2A6B               	goto	l270
   985  0254  2A44               	goto	l641
   986  0255                     l645:	
   987  0255  3001               	movlw	1
   988  0256  00A5               	movwf	??___ftpack
   989  0257  0825               	movf	??___ftpack,w
   990  0258  07A3               	addwf	___ftpack@exp,f
   991  0259  3001               	movlw	1
   992  025A  07A0               	addwf	___ftpack@arg,f
   993  025B  3000               	movlw	0
   994  025C  1803               	skipnc
   995  025D  3001               	movlw	1
   996  025E  07A1               	addwf	___ftpack@arg+1,f
   997  025F  3000               	movlw	0
   998  0260  1803               	skipnc
   999  0261  3001               	movlw	1
  1000  0262  07A2               	addwf	___ftpack@arg+2,f
  1001  0263  3001               	movlw	1
  1002  0264                     u415:	
  1003  0264  1003               	clrc
  1004  0265  0CA2               	rrf	___ftpack@arg+2,f
  1005  0266  0CA1               	rrf	___ftpack@arg+1,f
  1006  0267  0CA0               	rrf	___ftpack@arg,f
  1007  0268  3EFF               	addlw	-1
  1008  0269  1D03               	skipz
  1009  026A  2A64               	goto	u415
  1010  026B                     l270:	
  1011  026B  30FF               	movlw	255
  1012  026C  0522               	andwf	___ftpack@arg+2,w
  1013  026D  1903               	btfsc	3,2
  1014  026E  2A7A               	goto	l653
  1015  026F  2A55               	goto	l645
  1016  0270                     l651:	
  1017  0270  3001               	movlw	1
  1018  0271  02A3               	subwf	___ftpack@exp,f
  1019  0272  3001               	movlw	1
  1020  0273                     u435:	
  1021  0273  1003               	clrc
  1022  0274  0DA0               	rlf	___ftpack@arg,f
  1023  0275  0DA1               	rlf	___ftpack@arg+1,f
  1024  0276  0DA2               	rlf	___ftpack@arg+2,f
  1025  0277  3EFF               	addlw	-1
  1026  0278  1D03               	skipz
  1027  0279  2A73               	goto	u435
  1028  027A                     l653:	
  1029  027A  1BA1               	btfsc	___ftpack@arg+1,7
  1030  027B  2A80               	goto	l277
  1031  027C  3002               	movlw	2
  1032  027D  0223               	subwf	___ftpack@exp,w
  1033  027E  1803               	skipnc
  1034  027F  2A70               	goto	l651
  1035  0280                     l277:	
  1036  0280  1823               	btfsc	___ftpack@exp,0
  1037  0281  2A88               	goto	l278
  1038  0282  30FF               	movlw	255
  1039  0283  05A0               	andwf	___ftpack@arg,f
  1040  0284  307F               	movlw	127
  1041  0285  05A1               	andwf	___ftpack@arg+1,f
  1042  0286  30FF               	movlw	255
  1043  0287  05A2               	andwf	___ftpack@arg+2,f
  1044  0288                     l278:	
  1045  0288  1003               	clrc
  1046  0289  0CA3               	rrf	___ftpack@exp,f
  1047  028A  0823               	movf	___ftpack@exp,w
  1048  028B  00A5               	movwf	??___ftpack
  1049  028C  01A6               	clrf	??___ftpack+1
  1050  028D  01A7               	clrf	??___ftpack+2
  1051  028E  3010               	movlw	16
  1052  028F                     u475:	
  1053  028F  1003               	clrc
  1054  0290  0DA5               	rlf	??___ftpack,f
  1055  0291  0DA6               	rlf	??___ftpack+1,f
  1056  0292  0DA7               	rlf	??___ftpack+2,f
  1057  0293  3EFF               	addlw	-1
  1058  0294  1D03               	skipz
  1059  0295  2A8F               	goto	u475
  1060  0296  0825               	movf	??___ftpack,w
  1061  0297  04A0               	iorwf	___ftpack@arg,f
  1062  0298  0826               	movf	??___ftpack+1,w
  1063  0299  04A1               	iorwf	___ftpack@arg+1,f
  1064  029A  0827               	movf	??___ftpack+2,w
  1065  029B  04A2               	iorwf	___ftpack@arg+2,f
  1066  029C  0824               	movf	___ftpack@sign,w
  1067  029D  1903               	btfsc	3,2
  1068  029E  0008               	return
  1069  029F  17A2               	bsf	___ftpack@arg+2,7
  1070  02A0  0008               	return
  1071  02A1                     __end_of___ftpack:	
  1072  005E                     btemp	set	94	;btemp
  1073  005E                     wtemp0	set	94


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     50      50

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SetPwmValue
    _SetPwmValue->___fttol
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4146
                                             48 BANK0      2     2      0
                        _SetPwmValue
 ---------------------------------------------------------------------------------
 (1) _SetPwmValue                                          6     4      2    4145
                                             42 BANK0      6     4      2
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1704
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     305
                                             28 BANK0     14    10      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2061
                                             12 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1629
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetPwmValue
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E     32      32       4       80.6%
ABS                  0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Sep 25 15:21:10 2017

            __CFG_CP$OFF 0000                      l270 026B                      l361 0314  
                    l277 0280                      l701 03C2                      l278 0288  
                    l641 0244                      l705 03D2                      l721 02BA  
                    l651 0270                      l643 0250                      l653 027A  
                    l645 0255                      l637 023D                      l741 02FC  
                    l671 0345                      l753 0325                      l747 0309  
                    l739 02EC                      l693 03AA                      l677 035B  
                    l749 0317                      l689 039A                      l779 01FB  
                    _IOC 0096                      u415 0264             __CFG_CPD$OFF 0000  
                    u435 0273                      u515 0367                      u605 03D3  
                    u525 0379                      u615 03DB                      u705 030B  
                    u475 028F                      u395 0249                      u555 03AB  
                    u565 03B3                      u645 02C1                      u737 022E  
                    u675 02ED                     _GPIO 0005                     _main 01EC  
           ___ftpack@arg 0020             ___ftpack@exp 0023                     btemp 005E  
          __CFG_BOREN$ON 0000                     start 0000             ___ftmul@cntr 003A  
           ___ftmul@sign 003B             ___fttol@exp1 0049             ___fttol@lval 0045  
                  ?_main 0020            __CFG_WDTE$OFF 0000                    _CMCON 0019  
        __end_of___ftmul 03FD          __end_of___fttol 032E            ___ftpack@sign 0024  
                  status 0003                    wtemp0 005E           __CFG_MCLRE$OFF 0000  
        __initialization 03FD             __end_of_main 0202                   ??_main 0000  
          ___fttol@sign1 0044            ??_SetPwmValue 004C         __end_of___ftpack 02A1  
       __end_of___lwtoft 01EC                   _TRISIO 0085           __CFG_PWRTE$OFF 0000  
              ??___ftmul 0032                ??___fttol 0040    ___ftmul@f3_as_product 0037  
__end_of__initialization 03FD      __end_of_SetPwmValue 0234               ___ftmul@f1 002C  
             ___ftmul@f2 002F               ___fttol@f1 003C           __pcstackCOMMON 0000  
             ___lwtoft@c 0028               __pmaintext 01EC                ?___ftpack 0020  
              ?___lwtoft 0028              _SetPwmValue 0202                  ___ftmul 032E  
                ___fttol 02A1               ??___ftpack 0025                  __ptext1 0202  
                __ptext2 01D8                  __ptext3 02A1                  __ptext4 032E  
                __ptext5 0234               ??___lwtoft 002B                  main@pwm 0050  
   end_of_initialization 03FD           SetPwmValue@pwm 004A              ___ftmul@exp 0036  
    start_initialization 03FD        __size_of___ftpack 006D                ___latbits 0000  
      __size_of___lwtoft 0014            __pcstackBANK0 0020             ?_SetPwmValue 004A  
               ?___ftmul 002C                 ?___fttol 003C                 _GPIObits 0005  
       __size_of___ftmul 00CF         __size_of___fttol 008D                 ___ftpack 0234  
               ___lwtoft 01D8     __size_of_SetPwmValue 0032            __size_of_main 0016  
             _OPTION_REG 0081        __CFG_FOSC$INTRCIO 0000  
